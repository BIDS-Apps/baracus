version: 2

jobs:
  build_test:
    working_directory: ~/wd
    docker:
      - image: docker:18.01.0-ce-git
    steps:
      - checkout
      - run:
          name: Install parallel gzip
          command: |
            apk add --no-cache pigz
      - restore_cache:
          keys:
            - docker-v1-{{ .Branch }}-{{ .Revision }}
            - docker-v1-{{ .Branch }}-
            - docker-v1-master-
            - docker-v1-
          paths:
            - /tmp/cache/docker.tar.gz
      # - setup_remote_docker
      # - run:
      #     name: Load Docker image layer cache
      #     no_output_timeout: 30m
      #     command: |
      #       docker info
      #       set +o pipefail
      #       if [ -f /tmp/cache/docker.tar.gz ]; then
      #         pigz -d --stdout /tmp/cache/docker.tar.gz | docker load
      #       else
      #         echo "No docker cache found"
      #       fi
      #       docker images
      #   - run:
      #       name: get version
      #       command: |
      #         git describe --tags --always > version
      #         cat version
      #   - run:
      #       name: Build Docker image
      #       no_output_timeout: 60m
      #       command: |
      #         docker images
      #         set +o pipefail
      #         docker build --cache-from=${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME} \
      #         -t ${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}:latest .
      #         docker images
      #   - run:
      #       name: Docker save
      #       no_output_timeout: 40m
      #       command: |
      #         mkdir -p /tmp/cache
      #         set +o pipefail
      #         docker save ${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}:latest \
      #           | pigz -2 -p 3 > /tmp/cache/docker.tar.gz
      #   - save_cache:
      #        key: docker-v1-{{ .Branch }}-{{ epoch }}
      #        paths:
      #         - /tmp/cache/docker.tar.gz

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - build_test:
          filters:
            tags:
              only: /.*/
